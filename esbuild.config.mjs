import esbuild from 'esbuild'
import process from 'process'
import esbuildCopyStaticFiles from 'esbuild-copy-static-files'
import postcss from 'esbuild-postcss'

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`

const DIR = 'notion-sync'
if (!DIR) throw new Error('plugin id missing')
const VAULT = 'Joshua'
// const VAULT = 'TEST'

const MODE = process.env.MODE
const NO_CSS = process.env.NO_CSS

let entryPoints = [`src/main.ts`]
entryPoints.push(`src/styles.css`)

const plugins = [
  postcss(),
  esbuildCopyStaticFiles({
    src: `./dist`,
    dest: `/Users/jreinier/${VAULT}/.obsidian/plugins/${DIR}`,
    dereference: true,
    errorOnExist: false,
    preserveTimestamps: true
  })
]

const context = await esbuild.context({
  banner: {
    js: banner
  },
  entryPoints,
  bundle: true,
  external: [
    'obsidian',
    'electron',
    '@codemirror/autocomplete',
    '@codemirror/collab',
    '@codemirror/commands',
    '@codemirror/language',
    '@codemirror/lint',
    '@codemirror/search',
    '@codemirror/state',
    '@codemirror/view',
    '@lezer/common',
    '@lezer/highlight',
    '@lezer/lr'
  ],
  format: 'cjs',
  target: 'es2018',
  logLevel: 'info',
  sourcemap: MODE === 'production' ? false : 'inline',
  treeShaking: true,
  outdir: `dist`,

  loader: {
    '.mp3': 'dataurl',
    '.svg': 'text',
    '.png': 'dataurl'
  },
  plugins
})

if (MODE === 'production') {
  await context.rebuild()
  process.exit(0)
} else {
  await context.watch()
}
